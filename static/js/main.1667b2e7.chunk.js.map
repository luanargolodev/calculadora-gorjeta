{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","value","setValue","valuePercentagem","setPercentagem","className","type","onChange","e","parseFloat","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NA8BeA,MA3Bf,WAAgB,IAAD,EACaC,mBAAS,GADtB,mBACNC,EADM,KACCC,EADD,OAE8BF,mBAAS,GAFvC,mBAENG,EAFM,KAEYC,EAFZ,KAGb,OACE,sBAAKC,UAAU,SAAf,UACE,wDAEA,uDACA,uBAAOC,KAAK,SAASD,UAAU,cAAcJ,MAAOA,EAAOM,SAAU,SAACC,GAAD,OAAON,EAASO,WAAWD,EAAEE,OAAOT,WAEzG,+DACA,uBAAOK,KAAK,SAASD,UAAU,cAAcJ,MAAOE,EAAkBI,SAAU,SAACC,GAAD,OAAOJ,EAAeK,WAAWD,EAAEE,OAAOT,WAE1H,uBAECA,EAAQ,GACP,sBAAKI,UAAU,SAAf,UACE,iDACA,oDAAuBJ,KACvB,0CAAaE,EAAb,SAAsCA,EAAiB,IAAOF,KAC9D,sDAAwB,wCAAWA,EAASE,EAAiB,IAAMF,eCX9DU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1667b2e7.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [value, setValue] = useState(0);\r\n  const [valuePercentagem, setPercentagem] = useState(0);\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Calculadora de Gorjeta</h1>\r\n\r\n      <p>Qual o valor da conta?</p>\r\n      <input type=\"number\" className=\"input-value\" value={value} onChange={(e) => setValue(parseFloat(e.target.value))}></input>\r\n\r\n      <p>Qual a porcentagem da gorjeta?</p>\r\n      <input type=\"number\" className=\"input-value\" value={valuePercentagem} onChange={(e) => setPercentagem(parseFloat(e.target.value))}></input>\r\n    \r\n      <hr/>\r\n\r\n      {value > 0 &&\r\n        <div className=\"resume\">\r\n          <h1>Resumo da Conta</h1>\r\n          <p>Valor consumido: R${value}</p>\r\n          <p>Gorjeta: {valuePercentagem}% = R${(valuePercentagem/100) * value}</p>\r\n          <p>Valor total a pagar: <strong>R${value + (valuePercentagem/100 * value)}</strong></p>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}